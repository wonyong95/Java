package day02;

public class Operator3 {
	public static void main(String[] args) {
		System.out.println("다항연산자  -----");
		System.out.println("5. 산술연산자(+,-,*,/,%)");
		int x=10;
		int y=3;
		System.out.printf("%d + %d=%d%n", x, y,(x+y));
		System.out.printf("%d - %d=%d%n", x, y,(x-y));
		System.out.printf("%d * %d=%d%n", x, y,(x*y));
		System.out.printf("%d / %d=%d%n", x, y,(x/y));
		System.out.printf("%d mod %d=%d%n", x, y,(x%y));
		System.out.println(10/3.0f);
		// int/float => float (promotion)
		
		/*Shift연산자
		1) << : 왼쪽으로 비트수만큼 이동.
				오른쪽에 남은 빈칸은 0으로 채움
		2) >> : 오른쪽으로 비트수만큼 이동.
				앞에 남은 빈칸은 부호비트로 채움
		3) >>>: 오른쪽으로 비트수만큼 이동.
				앞에 남은 빈칸은 무조건 0으로 채움		
		*/
		
		System.out.println("6. Shift연산자(<<,>>,>>>");
		//양수:23
		//23   : 00000000 00000000 00000000 00010111
		//23<<3 : 00000 00000000 00000000 00010111000 ==> 184
		//23>>3 : 000 00000000 00000000 00000000 00010 ==> 2
		//23>>>3 : 000 00000000 00000000 00000000 00010 ==> 2
		System.out.println(23>>3);
		System.out.println(23<<3);
		System.out.println(23>>>3);
		
		/* 음수를 비트로 표현하는 방법 : 자바는 2의 보수를 취한다
		 * 2의 보수란? 1의 보수를 구한 값에 +1을 한다
		 * 1의 보수란? 비트반전
		 * */
		
		//음수:-23
		//23의비트 : 00000000 00000000 00000000 00010111
		//1의보수 :  11111111 11111111 11111111 11101000
		// +1   :  11111111 11111111 11111111 11101001
		// -23  :  11111111 11111111 11111111 11101001
		//-23>>3 : 111 11111111 11111111 11111111 11101 =>-3
		//-23<<3 : 11111 11111111 11111111 11101001 000 =>-184
		//-23>>>3 : 000 11111111 11111111 11111111 11101 => 536870909
		
		//음수값을 비트로 표현하는 방법의 팁
				/* 양수값을 먼저 비트로 표현한다. 그런 뒤 하위에서 첫번째 1을 만날때까지는 
				 * 양수의 비트와 동일하게 작성하고, 첫번째 1을 만난뒤부터는 비트 반전을 한다
				 * */
		// -8을 비트로 표현해보세요
		// 8 : 00000000 00000000 00000000 00001000
		
		System.out.println(-23>>3);
		System.out.println(-23<<3);
		System.out.println(-23>>>3);
		
		System.out.println("7. 비트연산자 (&,|,^)");
		//정수값에만 사용되는 연산자 : 정수를 비트로 바꾸어 연산을한다
		int a=3;
		int b=5;
	    System.out.printf("%d & %d=%d%n", a,b,(a&b));
	    System.out.printf("%d | %d=%d%n", a,b,(a|b));
	    System.out.printf("%d ^ %d=%d%n", a,b,(a^b));
	    
	}

}
